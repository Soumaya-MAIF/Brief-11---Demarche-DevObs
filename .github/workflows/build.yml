on:
  push:

    branches:
      - main
      - beta

permissions:
  contents: write
 
jobs:
  get-version:
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      release-branches: '^(main)$'
      prerelease-branches: "^(beta)$"

  build:
   name: rust build
   runs-on: ubuntu-latest
   if: ${{ needs.get-version.outputs.will-release == 'true' }}
   needs:
   - get-version


   steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: wasm32-unknown-unknown 
      
      - name: trunk install
        uses: jetli/trunk-action@v0.5.0

      - name: Build with Trunk
        env:
         VERSION: "${{ needs.get-version.outputs.version }}"     
        run: trunk build --release
      - uses: actions/upload-artifact@v4
        with:
           name: rust
           path: dist/*
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ get-version, build ]

    steps: 
        - name: Download artifacts
          uses: actions/download-artifact@v4.1.8
          with:
            name: rust
            path: dist/
        - name: Zip files artifacts
          run: zip -r artifacts.zip dist/*
        - name: Create Github Release
          env:
            VERSION: "${{ needs.get-version.outputs.version }}"
            REPO: "${{ github.repository }}"
            COMMIT: "${{ github.sha }}"
            GH_TOKEN: "${{ github.token }}"
            PRERELEASE: "${{ needs.get-version.outputs.is-prerelease }}"
            CHANGELOG: "${{ needs.get-version.outputs.changelogs }}"
          run: |
            echo "${{ needs.get-version.outputs.changelogs }}" > changelog.md
            if [ "$PRERELEASE" == "true" ]; then
            gh release create --prerelease --repo $REPO --target $COMMIT -F $CHANGELOG "v$VERSION" artifacts.zip
            else
            gh release create --repo $REPO --target $COMMIT -F $CHANGELOG "v$VERSION" artifacts.zip
            fi
        

          
        
       

  
